// <auto-generated />
using System;
using InchirieriBiciclete.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InchirieriBiciclete.Migrations
{
    [DbContext(typeof(InchirieriContext))]
    [Migration("20250129011915_AddPretSiStare")]
    partial class AddPretSiStare
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InchirieriBiciclete.Data.Bicicleta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Stare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Biciclete");
                });

            modelBuilder.Entity("InchirieriBiciclete.Data.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clienti");
                });

            modelBuilder.Entity("InchirieriBiciclete.Data.Inchiriere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BicicletaId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInchiriere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataReturnare")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BicicletaId");

                    b.HasIndex("ClientId");

                    b.ToTable("Inchirieri");
                });

            modelBuilder.Entity("InchirieriBiciclete.Data.Plata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataPlata")
                        .HasColumnType("datetime2");

                    b.Property<int>("InchiriereId")
                        .HasColumnType("int");

                    b.Property<decimal>("Suma")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InchiriereId");

                    b.ToTable("Plati");
                });

            modelBuilder.Entity("InchirieriBiciclete.Data.Inchiriere", b =>
                {
                    b.HasOne("InchirieriBiciclete.Data.Bicicleta", "Bicicleta")
                        .WithMany()
                        .HasForeignKey("BicicletaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InchirieriBiciclete.Data.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bicicleta");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("InchirieriBiciclete.Data.Plata", b =>
                {
                    b.HasOne("InchirieriBiciclete.Data.Inchiriere", "Inchiriere")
                        .WithMany()
                        .HasForeignKey("InchiriereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inchiriere");
                });
#pragma warning restore 612, 618
        }
    }
}
